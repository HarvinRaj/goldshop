name: Go Formatting

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Go-Lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Checkout code from the repository

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Run Go Linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.54.2 # Specify the desired version
        args: > 
          run ./... # Arguments passed to golangci-lint
  Go-Format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Checkout code from the repository

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Run Go Formatter
      uses: sladyn98/auto-go-format@v0.0.1  # Automatically format Go code

  Go-Coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Checkout code from the repository

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Run Go Coverage
      uses: gwatts/go-coverage-action@v2.0.0  # Run Go Coverage
      with:
        token: ${{ github.token }}
        report-filename: go-coverage.html
        cover-mode: count
        test-pkgs: ./...
        coverage-threshold: 80
        fail-coverage: always
        add-comment: true
        notes-ref: gocoverage
